#!/usr/bin/env ruby

require 'rubyhole'
require 'em-websocket'
require 'bunny'
require 'json'

$running = true
Signal.trap('TERM') do
  $running = false
end

while($running) do
  EM.run do
    puts 'socket ready...'
    EM::WebSocket.run(:host => '0.0.0.0', :port => 8080) do |ws|
      conn = Bunny.new(:host => '54.154.93.107', :user => 'prima', :pass => 'prima', :vhost => 'prima')
      rabbitmq_manager = Rubyhole::RabbitMqManager.new(conn)

      conn.start
      ch = rabbitmq_manager.create_channel
      x = ch.topic('entity', {:durable => true})
      q = ch.queue('', :auto_delete => true).bind(x, :routing_key => '#')

      rabbitmq_manager.subscribe q, ws

      ws.onopen do |handshake|
        puts 'WebSocket connection open'
      end

      ws.onclose do
        unless q.nil?
          q.purge
          q.delete
        end
        rabbitmq_manager.close_channel
        conn.close
        puts 'Connection closed'
      end

      ws.onmessage do |msg|
        puts "Recieved message: #{msg}"
        data = JSON.parse(msg)
        case data['action']
          when 'binding'
            ch = rabbitmq_manager.create_channel
            q = rabbitmq_manager.bind ch, x, data
            rabbitmq_manager.subscribe q, ws
          when 'stop'
            q.unbind x
            q.delete
            rabbitmq_manager.close_channel
        end
      end
    end
  end
end
